name: 'Merge Feature Branch'

on:
  workflow_dispatch:
    inputs:
      release_branch:
        description: 'Select branch to merge changes into'
        required: true
        type: choice
        options:
          - 'master'
          - 'release/v1.1'
          - 'release/v1.0'
      feature_branch:
        description: 'Feature branch'
        required: true
        type: string
      is_a_prerelease:
        description: 'Is this a prerelease?'
        required: true
        type: boolean
        default: false

jobs:
  build:
    runs-on: windows-latest
    continue-on-error: false
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Checkout specific branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.feature_branch }}
          fetch-depth: 0
          fetch-tags: true
      
      - name: Fetch all branches
        shell: bash
        run: git fetch --all

      - name: Create integration branch for selected release branch
        id: create_integration_branch
        shell: bash
        run: |
          integration_branch="integration/${{ github.event.inputs.release_branch }}/${{ github.event.inputs.feature_branch }}"
          git checkout -b "$integration_branch"
          echo "Created integration branch: $integration_branch"
          echo "$integration_branch" > integration_branches.txt
          echo "integration_branch=$integration_branch" >> $GITHUB_OUTPUT
      
      - name: Create list of commits to cherrypick (based from master)
        id: list_commits
        shell: bash
        run: |
          git fetch origin master:master
          git fetch origin ${{ github.event.inputs.feature_branch }}:${{ github.event.inputs.feature_branch }}
          git log master..${{ github.event.inputs.feature_branch }} --pretty=format:"%H" > commits_to_cherrypick.txt
          echo "commits_to_cherrypick=$(cat commits_to_cherrypick.txt)" >> $GITHUB_OUTPUT
      
      - name: Cherry-pick commits into integration branch
        id: cherry_pick_commits
        shell: bash
        run: |
          if [ ! -s commits_to_cherrypick.txt ]; then
            echo "No commits to cherry-pick."
            exit 0
          fi
          integration_branch=$(cat integration_branches.txt)
          git checkout "$integration_branch"
          while IFS= read -r commit; do
            git cherry-pick "$commit" || {
              echo "Conflict occurred while cherry-picking commit $commit into $integration_branch. Aborting cherry-pick."
              git cherry-pick --abort
              exit 1
            }
          done < commits_to_cherrypick.txt
          echo "Cherry-picked commits into $integration_branch"
      
      - name: Push integration branch and create squashed pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          integration_branch=$(cat integration_branches.txt)
          git push origin "$integration_branch"
          gh pr create \
            --base "${{ github.event.inputs.release_branch }}" \
            --head "$integration_branch" \
            --title "Squash cherrypick changes from ${{ github.event.inputs.feature_branch }} into ${{ github.event.inputs.release_branch }}" \
            --body "This pull request was automatically created to squash cherrypick changes from \`${{ github.event.inputs.feature_branch }}\` into \`${{ github.event.inputs.release_branch }}\`.\n\nPlease review the changes and resolve any conflicts if necessary." \
            --label "automated-cherry-pick" \
            --draft=false
